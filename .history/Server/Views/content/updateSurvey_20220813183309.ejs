<section >
<div class="container update_box " style="justify-content: center;">
      <div  class="row" style="margin-top: 50px;">
        <div>
          <h1 class="display-4">Update</h1>
          <br>
            <form class="form" method="post" onsubmit="return MinQuestioncheck()">

              <label for="startDate">Start Date:</label>
              <input type="datetime-local" id="startDate" name="startDate" class="form-control"required onchange="setMinDate(endDate, new Date(this.value))">

              <label for="endDate">End Date:</label>
              <input type="datetime-local" id="endDate" name="endDate"class="form-control">
              <br><br>

              <div class="form-group">
                <label for="surveyName">Give your survey a Title</label>
                <input type="text" class="form-control" id="surveyName"
                placeholder="Give your survey a Title" name="surveyName" value="<%= surveys.surveyName %>" required>
              </div>

             <br>
             <input type="hidden" name="questions[]" value="*"> 
             <input type="hidden" name="type[]" value="*"> 
              <div id="questions">
                 <!-- Repeatable Rows -->
                 <% for(let count = 0; count < surveys.Questions.length; count++) { %>
                  <div id="<%= count %>">
                      <!-- Create a new Table Row-->                     

                      <label for="q">Enter Question Text</label>
                      <input type="text" name="questions[]" value="<%= surveys.Questions[count].qText %>"class="form-control">
                      <br>

                      <% for(let i = 0; i < surveys.Questions[count].options.length; i++) { %>                      
                        <input disabled type="radio">
                        <input type="text" name="options[]" value="<%= surveys.Questions[count].options[i] %>"><br>
                      <% } %>
                      
                      <!---last options position stores asterisk to separate different question options-->
                      <input type="hidden" name="options[]" value="*">  
                      <input type="hidden" name="type[]" value="<%=surveys.Questions[count].qType %>">
                      <br><br>
                      <button class="btn register" id="cancelButton" onclick="deleteQues(<%= count %>)" type="button">Delete this question</button>
                      <hr>
                    </div>
                 <% } %>
              </div>

             <br> 
            <button class="btn btn-sm text-light" style="border-radius:40px; background: #00897B" onclick="add_MCques()" type="button"><i class="fa-solid fa-plus"></i>  Add Multiple choice Question</button> 
            <button class="btn btn-sm text-light" style="border-radius:40px; background: #00897B" onclick="add_TFques()" type="button"><i class="fa-solid fa-plus"></i>  Add New True/False Question</button>
            
            
            <br><br>
              <button type="submit" class="btn register"><i class="fa-solid fa-check"></i></i> Submit</button>
              <a href="/userSurveys" class="btn" id="cancelButton"><i class="fa fa-undo"></i> Cancel</a>
              <br><br>
              <p style="color:rgb(255, 96, 96);">*Note updating will remove all statistical data previously collected</p>
            </form>
        </div>
      </div>
    </div>
    
    <script>  

    //put form dates
    let startDateDB = new Date("<%= surveys.startDate %>");   
    let endDateDB =   new Date("<%= surveys.endDate %>");
    
    document.getElementById('startDate').value = getDateString(startDateDB);
    document.getElementById('endDate').value = getDateString(endDateDB);

    setMinDate(startDate);
    setMinDate(endDate);

    function setMinDate(myid, myDate = new Date()){
      myDate = getDateString(myDate);
      myid.setAttribute("min", myDate);
    }

    function getDateString(myDate){
      //https://www.codegrepper.com/code-examples/html/input+type%3Ddate+min+today
      
      // Use Javascript
      
      let dd = myDate.getDate();
      let mm = myDate.getMonth()+1; //January is 0 so need to add 1 to make it 1!
      let yyyy = myDate.getFullYear();
      if(dd<10){
        dd='0'+dd
      } 
      if(mm<10){
        mm='0'+mm
      } 

      //https://stackoverflow.com/questions/10073699/pad-a-number-with-leading-zeros-in-javascript
      //padd with a zero
      let hours = String(myDate.getHours()).padStart(2, 0);
      let mins = String(myDate.getMinutes()).padStart(2, 0);
      let secs = String(myDate.getSeconds()).padStart(2, 0);


      myDate = yyyy+'-'+mm+'-'+dd+'T'+hours+':'+mins;
      return myDate;
    }


      //function checks that at least one question is added
      function MinQuestioncheck(){

      if(qCount == 0){               
        alert("Please add a least one question");
        return false;
      }

      return true;

      }

      //var questions = document.getElementById("questions");

      //var QuestionArray = [];
      
      //important to update the counter index so that new questions do not overwrite old questions
      let i= <%= surveys.Questions.length %>;
      let qCount = i;    
      
      function add_MCques(){
        
        //create new div node with id number
        const NewquesDiv = document.createElement("div");
        NewquesDiv.setAttribute("id", i);
        const node = document.createTextNode("");
       
        NewquesDiv.appendChild(node);
        const element = document.getElementById("questions");
        element.appendChild(NewquesDiv);
        
        
        document.getElementById(i).innerHTML = get_MC_Template();

        //QuestionArray.push(get_MC_Template())
  
        //document.getElementById(i).innerHTML = QuestionArray[i];

        //questions.innerHTML = QuestionArray.join(" ");
        //questions.innerHTML += QuestionArray[i];
        i++;
        qCount++;

      }

      function add_TFques(){

        const NewquesDiv = document.createElement("div");
        NewquesDiv.setAttribute("id", i);
        const node = document.createTextNode("");
       
        NewquesDiv.appendChild(node);
        const element = document.getElementById("questions");
        element.appendChild(NewquesDiv);
        
        
        document.getElementById(i).innerHTML = get_TF_Template();

        //QuestionArray.push(get_TF_Template())
  
        //questions.innerHTML = QuestionArray.join(" ");
        //questions.innerHTML += QuestionArray[i];
        i++;
        qCount++;
      }

      function deleteQues(i){
        document.getElementById(i).remove();
        //QuestionArray[i] = "";

        //questions.innerHTML = QuestionArray.join(" ");
        qCount--;
      }



      function get_MC_Template(){
        let MC_Template = `
          <label for="q">Enter Question Text</label>
          <input type="text" name="questions[]">
          
          <br>
          <input disabled type="radio">
          <input type="text" name="options[]"><br>
          
          <input disabled type="radio">
          <input type="text"  name="options[]"><br>
        
          <input disabled type="radio">
          <input type="text" name="options[]"><br>
          
          <input disabled type="radio">
          <input type="text" name="options[]">
          
          <input type="hidden" name="options[]" value="*">  
          <input type="hidden" name="type[]" value="MC">
          <br><br>
          <button onclick="deleteQues(${i})" type="button">Delete this question</button>
          <hr>`

        return MC_Template;
      }

      function get_TF_Template(){
        let TF_Template = `
          <label for="q">Enter Question Text</label>
          <input type="text" name="questions[]">
          
          <br>
          <input disabled type="radio">
          <input type="text" name="options[]" value="True"><br>
          
          <input disabled type="radio">
          <input type="text"  name="options[]" value="False">

          <input type="hidden" name="options[]" value="*">   
          <input type="hidden" name="type[]" value="TF">
          <br><br>
          <button onclick="deleteQues(${i})" type="button">Delete this question</button>
          <hr>             
        `

        return TF_Template;
      }

    </script>
</section>